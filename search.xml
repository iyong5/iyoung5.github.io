<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>thinkphp5.1中的数据库迁移和数据填充</title>
      <link href="/2020/01/14/Think-Migration/"/>
      <url>/2020/01/14/Think-Migration/</url>
      
        <content type="html"><![CDATA[<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>数据库迁移类似于数据库的SVN，可方便用于团队开发工程中的系统应用数据结构初始化、新建或删除表、新增或修改表字段等操作。</p><p>Thinkphp提供了<code>think-migration</code>扩展用户数据库的迁移和数据填充</p><a id="more"></a><h2 id="数据库迁移"><a href="#数据库迁移" class="headerlink" title="数据库迁移"></a>数据库迁移</h2><h3 id="1-安装和创建迁移类"><a href="#1-安装和创建迁移类" class="headerlink" title="1. 安装和创建迁移类"></a>1. 安装和创建迁移类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer require topthink/think-migration=2.0.*</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php think migrate:create Third</span><br></pre></td></tr></table></figure><p>表名称首字母需大写，如下图：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/OUVtzjhQi3.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><p>系统会自动生成迁移类文件：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/t512t9SIlh.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><h3 id="2-编辑操作方法"><a href="#2-编辑操作方法" class="headerlink" title="2. 编辑操作方法"></a>2. 编辑操作方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">use think\migration\Migrator;</span><br><span class="line">use think\migration\db\Column;</span><br><span class="line">use Phinx\Db\Adapter\MysqlAdapter; //如创建MYSQL特有字段，需导入该命名空间</span><br><span class="line"></span><br><span class="line">class Test extends Migrator</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public function change()</span><br><span class="line">    &#123;</span><br><span class="line">        $table = $this-&gt;table(&apos;third&apos;, [&apos;engine&apos; =&gt; &apos;InnoDB&apos;, &apos;collation&apos; =&gt; &apos;utf8_bin&apos;, &apos;comment&apos; =&gt; &apos;测试表&apos;]);</span><br><span class="line">        $table-&gt;addColumn(&apos;member_id&apos;, &apos;integer&apos;, [&apos;limit&apos; =&gt; 10, &apos;signed&apos; =&gt; false, &apos;default&apos; =&gt; &apos;0&apos;, &apos;comment&apos; =&gt; &apos;MYSQL:int&apos;])//unsigned:(&apos;signed&apos; =&gt; false)</span><br><span class="line">                -&gt;addColumn(&apos;thirdid&apos;, &apos;integer&apos;, [&apos;limit&apos; =&gt; MysqlAdapter::INT_TINY, &apos;signed&apos; =&gt; false, &apos;default&apos; =&gt; &apos;0&apos;, &apos;comment&apos; =&gt; &apos;MYSQL:tinyint&apos;])//需导入命名空间</span><br><span class="line">                -&gt;addColumn(&apos;platform&apos;, &apos;string&apos;, [&apos;limit&apos; =&gt; 30, &apos;default&apos; =&gt; &apos;&apos;, &apos;comment&apos; =&gt; &apos;MYSQL:varchar&apos;])</span><br><span class="line">                -&gt;addColumn(&apos;fee&apos;, &apos;decimal&apos;, [&apos;precision&apos; =&gt; 10, &apos;scale&apos; =&gt; 2, &apos;default&apos; =&gt; &apos;0&apos;, &apos;comment&apos; =&gt; &apos;decimal&apos;])//decimal(10,2):(&apos;precision&apos; =&gt; 10, &apos;scale&apos; =&gt; 2)</span><br><span class="line">                -&gt;addColumn(&apos;money&apos;, &apos;float&apos;, [&apos;precision&apos; =&gt; 10, &apos;scale&apos; =&gt; 2, &apos;default&apos; =&gt; &apos;0&apos;, &apos;comment&apos; =&gt; &apos;float&apos;])</span><br><span class="line">                -&gt;addColumn(&apos;openid&apos;, &apos;text&apos;, [&apos;default&apos; =&gt; &apos;&apos;, &apos;comment&apos; =&gt; &apos;text&apos;])</span><br><span class="line">                -&gt;addColumn(&apos;content&apos;, &apos;text&apos;, [&apos;limit&apos; =&gt; MysqlAdapter::TEXT_LONG, &apos;default&apos; =&gt; &apos;&apos;, &apos;comment&apos; =&gt; &apos;MYSQL:longtext&apos;])</span><br><span class="line">                -&gt;addColumn(&apos;is_show&apos;, &apos;enum&apos;, [&apos;values&apos; =&gt; [&apos;false&apos;, &apos;ture&apos;], &apos;default&apos; =&gt; &apos;false&apos;, &apos;comment&apos; =&gt; &apos;enum&apos;])</span><br><span class="line">                -&gt;addColumn(&apos;delete_time&apos;, &apos;integer&apos;, [&apos;limit&apos; =&gt; 10, &apos;signed&apos; =&gt; false, &apos;null&apos; =&gt; true, &apos;default&apos; =&gt; NULL, &apos;comment&apos; =&gt; &apos;delete_time&apos;])//null:(&apos;null&apos; =&gt; true)</span><br><span class="line">                -&gt;addIndex([&apos;member_id&apos;], [&apos;name&apos; =&gt; &apos;member_id&apos;])</span><br><span class="line">                -&gt;addIndex([&apos;thirdid&apos;, &apos;member_id&apos;], [&apos;unique&apos; =&gt; true, &apos;name&apos; =&gt; &apos;thirdid&apos;])</span><br><span class="line">                -&gt;create();</span><br><span class="line"></span><br><span class="line">        $rows = [ //插入数据</span><br><span class="line">            [</span><br><span class="line">                &apos;member_id&apos; =&gt; 1,</span><br><span class="line">                &apos;platform&apos;  =&gt; &apos;zhifubao&apos;,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                &apos;member_id&apos; =&gt; 2,</span><br><span class="line">                &apos;platform&apos;  =&gt; &apos;weixin&apos;,</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">        $table-&gt;insert($rows)-&gt;save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或使用<code>up</code>和<code>down</code>方法，但使用<code>change</code>方法后，<code>up</code>和<code>down</code>方法将被忽略：</p><blockquote><p>Please be aware that when a change method exists, Phinx will automatically ignore the up and down methods</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public function up()</span><br><span class="line">&#123;</span><br><span class="line">    // add column type DOUBLE</span><br><span class="line">    $this-&gt;execute(&quot;ALTER TABLE zxcms_test ADD COLUMN much_money DOUBLE(10,2) unsigned NOT NULL DEFAULT &apos;0.00&apos;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public function down()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;dropTable(&apos;third&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-执行操作"><a href="#3-执行操作" class="headerlink" title="3. 执行操作"></a>3. 执行操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php think migrate:run</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/Z8h7trORcU.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><p>同时数据库中会生成<code>third</code>表和<code>migrations</code>表，<code>migrations</code>表用于记录本次操作的记录：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/FmhpBmgki8.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><h3 id="4-更新数据"><a href="#4-更新数据" class="headerlink" title="4. 更新数据"></a>4. 更新数据</h3><p>再次创建<code>migrate</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php think migrate:create ChangeThird</span><br></pre></td></tr></table></figure><p>再将需要更新的内容写到<code>change</code>方法中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public function change()</span><br><span class="line">&#123;</span><br><span class="line">    $table = $this-&gt;table(&apos;third&apos;);</span><br><span class="line">    $table-&gt;changeColumn(&apos;platform&apos;, &apos;string&apos;, [&apos;limit&apos; =&gt; 255])</span><br><span class="line">            -&gt;addColumn(&apos;password&apos;, &apos;string&apos;, array(&apos;after&apos; =&gt; &apos;platform&apos;,&apos;limit&apos; =&gt; 32, &apos;default&apos; =&gt; md5(&apos;123456&apos;), &apos;comment&apos; =&gt; &apos;用户密码&apos;))</span><br><span class="line">            -&gt;save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次执行操作：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/Vw1OZByTx5.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><h3 id="5-执行回滚"><a href="#5-执行回滚" class="headerlink" title="5. 执行回滚"></a>5. 执行回滚</h3><p><code>up</code>与<code>down</code>方法提供 <code>migrate:run</code> 和<code>migrate:rollback</code>功能，可通过以下命令回滚<code>down</code>中的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php think migrate:rollback -t third</span><br></pre></td></tr></table></figure><p><code>third</code>类文件中的<code>down</code>方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function down()</span><br><span class="line">&#123;</span><br><span class="line">$this-&gt;dropTable(&apos;third&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/MVsnww37v0.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><p><code>third</code>表被删除：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/dDE5unrPdH.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><h2 id="数据填充"><a href="#数据填充" class="headerlink" title="数据填充"></a>数据填充</h2><h3 id="1-创建seed"><a href="#1-创建seed" class="headerlink" title="1. 创建seed"></a>1. 创建seed</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php think seed:create Third</span><br></pre></td></tr></table></figure><p>如下：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/4p7Our1tPq.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><p>可看到生成的文件：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/woeKJ4PomR.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><h3 id="2-编辑seed文件"><a href="#2-编辑seed文件" class="headerlink" title="2. 编辑seed文件:"></a>2. 编辑seed文件:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public function run()</span><br><span class="line">&#123;</span><br><span class="line">    $data[] = [</span><br><span class="line">            &apos;member_id&apos; =&gt; 1,</span><br><span class="line">            &apos;thirdid&apos; =&gt; &apos;1&apos;,</span><br><span class="line">            &apos;platform&apos; =&gt; &apos;zhansan&apos;,</span><br><span class="line">        ];</span><br><span class="line">    $this-&gt;table(&apos;third&apos;)-&gt;insert($data)-&gt;save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-开始进行数据库填充"><a href="#3-开始进行数据库填充" class="headerlink" title="3. 开始进行数据库填充"></a>3. 开始进行数据库填充</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php think seed:run</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/Iec213fZx5.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><p>可指定一个或多个seed</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ php think seed:run -s Third</span><br><span class="line">$ php think seed:run -s Third -s member</span><br></pre></td></tr></table></figure><h2 id="使用假数据生成器"><a href="#使用假数据生成器" class="headerlink" title="使用假数据生成器"></a>使用假数据生成器</h2><blockquote><p>参考 <a href="https://packagist.org/packages/fzaninotto/faker" target="_blank" rel="noopener">fzaninotto/faker</a></p></blockquote><p>安装<code>faker</code>类库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer require fzaninotto/faker</span><br></pre></td></tr></table></figure><p>使用<code>faker</code>生成数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public function run()</span><br><span class="line">&#123;</span><br><span class="line">    $faker = Faker\Factory::create(&apos;zh_CN&apos;);//选择中文库</span><br><span class="line">    $data = [];</span><br><span class="line">    for ($i = 0; $i &lt; 100; $i++) &#123;</span><br><span class="line">        $data[] = [</span><br><span class="line">            &apos;member_id&apos; =&gt; $faker-&gt;randomDigit,</span><br><span class="line">&apos;thirdid&apos; =&gt; $faker-&gt;randomDigit,</span><br><span class="line">            &apos;platform&apos; =&gt; $faker-&gt;word,</span><br><span class="line">            &apos;openid&apos; =&gt; sha1($faker-&gt;password),</span><br><span class="line">            &apos;content&apos; =&gt; $faker-&gt;realText(50),</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">    $this-&gt;table(&apos;third&apos;)-&gt;insert($data)-&gt;save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://cdn.learnku.com/uploads/images/202001/11/46055/C6Aad5vo2x.png!large" alt="thinkphp5.1中的数据库迁移和数据填充"></p><blockquote><p>参考网址 <a href="https://www.kancloud.cn/manual/thinkphp5_1/354133" target="_blank" rel="noopener">ThinkPHP5.1</a>、<a href="http://docs.phinx.org" target="_blank" rel="noopener">Phinx</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thinkphp5.1 </tag>
            
            <tag> thinkphp </tag>
            
            <tag> tp </tag>
            
            <tag> php </tag>
            
            <tag> migration </tag>
            
            <tag> 数据库迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发规范</title>
      <link href="/2019/06/25/Norm-of-PHP-Development/"/>
      <url>/2019/06/25/Norm-of-PHP-Development/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本规范遵循PSR-2命名规范和PSR-4自动加载规范，参考：<a href="https://learnku.com/laravel/t/2079/psr-specification-psr-2-coding-style-specification" target="_blank" rel="noopener">PSR-2</a>、 <a href="https://learnku.com/laravel/t/2081/psr-specification-psr-4-automatic-loading-specification" target="_blank" rel="noopener">PSR-4</a></p></blockquote><h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><ul><li>目录使用小写+下划线；</li><li>类库、函数文件统一以.php为后缀；</li><li>类的文件名均以命名空间定义，并且命名空间的路径和类库文件所在路径一致；</li><li>类文件采用驼峰法命名（首字母大写），其它文件采用小写+下划线命名；</li></ul><a id="more"></a><p>参照一下文件命名方式：</p><p><img src="1.png" alt></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul><li>常量中所有字母都 <strong>必须</strong> 大写，词间以下划线分隔，如：<code>const DATE_APPROVED = &#39;2012-06-01&#39;</code>;</li><li>PHP所有 <a href="https://php.net/manual/en/reserved.keywords.php" target="_blank" rel="noopener">关键字</a> 以及 True/False/Null <strong>必须</strong> 全部小写，如：<code>if</code>,<code>elseif</code>,<code>or</code>,<code>true</code>,<code>use</code></li><li>函数的命名 <strong>必须</strong> 使用小写字母和下划线（小写字母开头）的方式，例如 <code>get_client_ip</code></li><li>方法的命名 <strong>必须</strong> 使用驼峰法（首字母小写），例如 <code>getUserName</code></li><li>属性的命名 <strong>必须</strong> 使用小写加下划线，例如 <code>table_name</code>、<code>instance</code></li><li>类名和类文件名保持一致， <strong>必须</strong> 使用驼峰法命名（首字母大写）,此处的「类」泛指所有的「class 类」、「接口」以及「traits 可复用代码块」；如：<code>class Member extends Controller</code></li><li><strong>必须</strong> 使用可阅读的英文或中文拼音命名类、方法、属性等， <strong>一定不可</strong> 使用如<code>$a</code>,<code>$b</code>,<code>$sql1</code>,<code>$sql2</code>等无明确意义的命名方式</li></ul><p>参照以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">namespace think;</span><br><span class="line"></span><br><span class="line">use think\cache\Driver;</span><br><span class="line"></span><br><span class="line">class Cache</span><br><span class="line">&#123;</span><br><span class="line">    const DATE_APPROVED = &apos;2012-06-01&apos;;</span><br><span class="line">    </span><br><span class="line">    protected tableName = &apos;&apos;;</span><br><span class="line">    </span><br><span class="line">    public function getConfig()</span><br><span class="line">    &#123;</span><br><span class="line">        $member_id = get_member_id($member_id);</span><br><span class="line">        if ($member_id == null) &#123;</span><br><span class="line">            echo &apos;null&apos;;</span><br><span class="line">        &#125; elseif ($member_id == 1) &#123;</span><br><span class="line">            echo &apos;1&apos;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &apos;0&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>数据表和字段采用小写加下划线方式命名，并注意字段名不要以下划线开头，例如 <code>zx_member</code> 表和 <code>user_name</code> 字段</li></ul><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><h3 id="标签与编码"><a href="#标签与编码" class="headerlink" title="标签与编码"></a>标签与编码</h3><ul><li>PHP 代码 必须 使用 <code>&lt;?php ?&gt;</code>，不可使用短标签和自定义标签</li><li>纯 PHP 代码文件 必须 省略最后的 <code>?&gt;</code> 结束标签</li><li>PHP 代码 必须 且只可使用 <code>不带BOM的UTF-8</code> 编码</li><li>所有 PHP 文件 必须 以一个空白行作为结束</li></ul><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><ul><li>非空行后 <strong>一定不可</strong> 有多余的空格符</li><li>代码 <strong>必须</strong> 使用 4 个空格符的缩进，<strong>一定不可</strong> 用 tab 键</li><li>其他按照<code>PSR2</code>规则，使用编辑完成代码格式自动化…</li></ul><h3 id="行"><a href="#行" class="headerlink" title="行"></a>行</h3><ul><li>每个 <code>namespace</code> 命名空间声明语句和 <code>use</code> 声明语句块后面，必须 插入一个空白行</li><li>类和方法开始花括号（<code>{</code>） 必须 写在类或函数声明后自成一行，结束花括号（<code>}</code>）也 必须 写在类或函数主体后自成一行</li><li>为了阅读方便，可适当添加空行，但不可滥用，不可出现连续空行</li><li><code>if</code>，<code>else</code> 等控制模块 <strong>一定不可</strong> 写成一行，<strong>必须</strong> 使用 「花括号」 分行；使用关键词 <code>elseif</code> 代替所有 <code>else if</code></li><li>控制模块不可嵌套多层，请使用函数等优化方法替代</li><li>其他按照<code>PSR2</code>规则，使用编辑完成代码格式自动化…</li></ul><h3 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h3><ul><li>去除不必要的变量命名，如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$plan = M(&apos;Plan&apos;);</span><br><span class="line">$plan_list = $plan-&gt;where(&apos;Is_show=1&apos;)-&gt;field(&apos;Id,Title,Add_time&apos;)-&gt;order(&apos;Add_time desc,Id ASC&apos;)-&gt;limit(5)-&gt;select();</span><br><span class="line">$this-&gt;assign(&apos;plan_list&apos;, $plan_list);</span><br></pre></td></tr></table></figure></li></ul><p>可优化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;assign(&apos;plan_list&apos;, M(&apos;Plan&apos;)-&gt;where(&apos;Is_show=1&apos;)-&gt;field(&apos;Id,Title,Add_time&apos;)-&gt;order(&apos;Add_time desc,Id ASC&apos;)-&gt;limit(5)-&gt;select());</span><br></pre></td></tr></table></figure><ul><li><code>switch</code> 代替多个 <code>elseif</code></li><li>控制模块不可嵌套多层，请使用函数等优化方法替代</li></ul><h2 id="编辑器代码格式化"><a href="#编辑器代码格式化" class="headerlink" title="编辑器代码格式化"></a>编辑器代码格式化</h2><h3 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a>sublime</h3><p>在启动 <code>Sublime</code> 程序后，使用快捷键 “<code>Ctrl + Shift + p</code> “，再选择 “<code>Package Control: Install Package</code>“</p><p><img src="2.png" alt></p><p>等待列出可安装的插件列表</p><p><img src="3.png" alt></p><p>输入”<code>CodeFormatter</code>“找到它，并点击即可安装</p><p><img src="4.png" alt></p><p> 打开需要格式化代码的文件，使用快捷键 “<code>Ctrl + Alt + f</code>“ 即可<br> 默认使用<code>psr2</code>样式</p><p><img src="5.png" alt></p><h3 id="NetBeans"><a href="#NetBeans" class="headerlink" title="NetBeans"></a>NetBeans</h3><p> 使用软件默认快捷键”<code>Alt + Shift + f</code> “,可实现代码格式化<br> 格式化的参数设置如下：</p><p><img src="6.png" alt></p><h3 id="phpstorm"><a href="#phpstorm" class="headerlink" title="phpstorm"></a>phpstorm</h3><p> 使用软件默认快捷键”<code>Ctrl + Alt + l</code> “,可实现代码格式化</p><p> 设置代码样式：File -&gt; Settings -&gt; Code Style -&gt;PHP</p><h3 id="ZendsSudio"><a href="#ZendsSudio" class="headerlink" title="ZendsSudio"></a>ZendsSudio</h3><p> 使用软件默认快捷键”<code>Ctrl + Shift + f</code> “,可实现代码格式化</p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
